--- Flash the screen when a player gets a !whisper.
-- @author Darrell
local _chatNotificationQueue = {}
function doChatNotification(srcColor, dstColor)
    assert(type(srcColor) == 'string' and type(dstColor) == 'string')

    -- Removed exisiting EOF.
    local queueWasEmpty = (#_chatNotificationQueue) == 0
    if not queueWasEmpty then
        local entry = table.remove(_chatNotificationQueue)
        assert(entry.eof, 'not eof')
    end

    -- Queue new actions (shared element, do one color at a time).
    table.insert(_chatNotificationQueue, {
        srcColor = srcColor,
        dstColor = dstColor,
        show = true
    })
    table.insert(_chatNotificationQueue, {
        hide = true
    })
    table.insert(_chatNotificationQueue, {
        srcColor = srcColor,
        dstColor = dstColor,
        show = true
    })
    table.insert(_chatNotificationQueue, {
        hide = true
    })
    table.insert(_chatNotificationQueue, {
        eof = true -- hide finished when this comes up
    })

    local function serviceChatNotificationQueue()
        local entry = table.remove(_chatNotificationQueue, 1)
        if entry and entry.show then
            UI.setAttribute('flashBorderLeft', 'color', srcColor)
            UI.setAttribute('flashBorderRight', 'color', srcColor)
            UI.setAttribute('flashBorder', 'active', true)
            UI.show('flashBorder')
            UI.setAttribute('flashBorder', 'visibility', dstColor) -- MUST be after active/show
        elseif entry and entry.hide then
            UI.hide('flashBorder')
        elseif (not entry) or entry.eof then
            UI.setAttribute('flashBorder', 'active', false)
        end
        if (#_chatNotificationQueue) > 0 then
            local delay = UI.getAttribute('flashBorder', 'animationDuration') or 0.1
            Wait.time(serviceChatNotificationQueue, tonumber(delay) * 1.5)
        end
    end
    if queueWasEmpty then
        serviceChatNotificationQueue()
    end
end
